
比如项目在 /home/tu/zqxt 这个位置，

在其中新建一个 uwsgi.ini 全路径为 /home/tu/zqxt/uwsgi.ini
[uwsgi]
vhost = false
plugins = python
socket = 127.0.0.1:8080
master = true
enable-threads = true
workers = 2
wsgi-file =  /home/natasha16/mysite/mysite/wsgi.py
virtualenv = /home/natasha16/py27env1
chdir = /home/natasha16/mysite

在nginx 目录下面，我的环境中是/etc/nginx 有个nginx.conf 里面 http 里面 配置一个 server 转发的到上面设置的uwsgi地址中 或者在 目录/etc/nginx/conf.d 下面 新增一个conf的文件，把server配置写在里面即可 重启nginx（重启命令在上面）
server 的配置的例子

server {
        listen 80;
        server_name host;
        location / {
            uwsgi_pass 127.0.0.1:9001;
            include /etc/nginx/uwsgi_params;
        }
        
        location /static {
            root /usr/local/apps/FutureCareer;
        }
        access_log off;
    }




比如项目在 /home/tu/zqxt 这个位置，

在其中新建一个 uwsgi.ini 全路径为 /home/tu/zqxt/uwsgi.ini

[uwsgi]
socket = /home/tu/zqxt/zqxt.sock
chdir = /home/tu/zqxt
wsgi-file = zqxt/wsgi.py
touch-reload = /home/tu/zqxt/reload
 
processes = 2
threads = 4
 
chmod-socket = 664
chown-socket = tu:www-data
 
vacuum = true

[uwsgi]
vhost = false
plugins = python
socket = 127.0.0.1:9001
master = true
enable-threads = true
workers = 2
wsgi-file = /usr/local/apps/FutureCareer/FutureCareer/wsgi.py
virtualenv = /usr/local/apps/envfortest
chdir = /usr/local/apps/FutureCareer
 
1 #uwsgi.ini file
2 [uwsgi]
3 
4 # Django-related settings
5 # the base directory (full path)
6 chdir           = /home/myself
7 # Django's wsgi file
8 module          = myself.wsgi:application
9 # the virtualenv (full path)
10 #home            = /path/to/virtualenv
11  
12 # process-related settings
13 # master
14 master          = true
15 # maximum number of worker processes
16 processes       = 3
17 # the socket (use the full path to be safe)
18 #socket          = /home/myself/myself.sock
19 socket = 127.0.0.1:8001
20 # ... with appropriate permissions - may be needed
21 chmod-socket    = 666
22 chown-socket = nginx:nginx
23 # clear environment on exit
24 vacuum          = true
25 enable-threads = true


# uwsgi_XXX.ini file
[uwsgi]

# Django-related settings
# the base directory (full path)
chdir           = /var/www/<project path>
# Django's wsgi file
module          = <project name>.wsgi
# the virtualenv (full path)
home            = <virtualenv path>

uid=apache
gid=apache

# process-related settings
# master
master          = true
# maximum number of worker processes
processes       = 10
# the socket (use the full path to be safe
socket          = /var/www/<project path>/<project name>.sock
# ... with appropriate permissions - may be needed
# chmod-socket    = 664
# clear environment on exit
vacuum          = true

daemonize = /var/log/uwsgi.log
stats = 0.0.0.0:9191

pidfile=/var/www/<project path>/uwsgi.pid




目录/etc/nginx/conf.d 下面 新增一个conf的文件，把server配置写在里面即可
server {
    listen      80;
    server_name 47.52.197.152;
    charset     utf-8;
 
    client_max_body_size 75M;
 
    location /media  {
        alias /home/natasha16/mysite/blog/media;
    }
 
    location /static {
        alias /home/natasha16/mysite/static;
    }
 
    location / {
        uwsgi_pass  127.0.0.1:8080;
        include     /etc/nginx/uwsgi_params;
    }
}



import os
os.environ['PYTHON_EGG_CACHE'] = '/<a path>/.python-eggs/' #为了防止Permission denied的web请求访问错误。
os.environ.setdefault("DJANGO_SETTINGS_MODULE", "maps.settings")

# This application object is used by any WSGI server configured to use this
# file. This includes Django's development server, if the WSGI_APPLICATION
# setting points here.
from django.core.wsgi import get_wsgi_application
application = get_wsgi_application()




from django.conf import settings 
if settings.DEBUG is False:
    urlpatterns += patterns('',
        url(r'^static/(?P<path>.*)$', 'django.views.static.serve', { 'document_root': settings.STATIC_ROOT,
        }),
    )